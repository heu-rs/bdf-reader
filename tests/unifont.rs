use bdf_reader::Font;
use indoc::indoc;
use log::info;
use pretty_assertions::assert_eq;
use simple_logger::SimpleLogger;
use std::{fs::File, io::BufReader};

#[test]
fn parse_unifont() {
	_ = SimpleLogger::new().init();

	let reader = BufReader::new(File::open("tests/unifont-15.0.01.bdf").unwrap());
	let font = Font::read(reader).expect("Failed to parse font");

	let j = font.glyph('j').expect("Missing glyph for 'j'");
	info!("Drawing 'j' {j:?}");
	let expected = indoc! { r#"
		................
		................
		................
		..........##....
		..........##....
		................
		........####....
		..........##....
		..........##....
		..........##....
		..........##....
		..........##....
		..........##....
		..........##....
		----------------
		..##....##......
		....####........
	"# };
	assert_eq!(j.bitmap().ascii_art(), expected);

	let ä = font.glyph('ä').expect("Missing glyph for 'ä'");
	info!("Drawing 'ä' {ä:?}");
	let expected = indoc! { r#"
		................
		................
		....##....##....
		....##....##....
		................
		................
		....########....
		..##........##..
		............##..
		....##########..
		..##........##..
		..##........##..
		..##......####..
		....######..##..
		----------------
		................
		................
	"# };
	assert_eq!(ä.bitmap().ascii_art(), expected);
}
